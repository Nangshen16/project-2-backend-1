
heroku logs --tail --app=project-2-backend


//issues, can't seed guardians
//routes are hanging



    {
        "firstName": "bobby",
        "lastName": "rodriguez",
        "dateOfBirth": "01-01-2010",
        "rank": "10th kyu",
        "contactInfo": {
            "phoneNumber": "111-111-1114",
            "email":"fakeemail@email.com",
            "address":"1111 one street, apt 1, corona, ny 11368"
        },
        "billing": {
            "plan": 12,
            "startDate": "01-01-2020",
            "renewalDate": "01-01-2021",
            "monthlyDueDate": 1,
            "monthlyFee": 75,
            "pastDueBalance": 0,
            "currentBalance": 75
        },
        "guardians": []
    }



    {
    "firstName": "ramon",
    "lastName": "rodriguez",
    "contactInfo": {
        "phoneNumber": "111 111 1111",
        "email": "fakeemailparent@email.com",
        "address": "1111 one street, apt 1, corona, ny 11368"
    },
    "students": ["jenny rodriguez", "jason rodriguez"]
    }


     
        //-----------------------------------

        // //iterate throughstudents arr
        // await Promise.all(guardianReqBody.students.map(async (student) => {
        //     //split full name to firstName and lastName
        //     const nameSplit = student.split(" ");
        //     console.log('nameSplit', nameSplit)

        //     //find student document with matching name
        //     let studentDoc = await Student.find({
        //         $and: [
        //             {firstName: nameSplit[0]},
        //             {lastName: nameSplit[1]}
        //         ]
        //     })

        //     console.log('studentDoc', studentDoc);

        //     // replace name in list of students with student ID in guardian
        //     student = studentDoc._id;    
        // }))
        // console.log('guardianReqBody', guardianReqBody);

        // //create Guardian
        // const newGuardian = await Guardian.create(guardianReqBody);

        // //push Guardian to students
        // await Promise.all(guardianReqBody.students.map(async (student => {
        //      //find student document with matching name
        //      let studentDoc = await Student.findOne({
        //         $and: {
        //             firstName: nameSplit[0],
        //             lastName: nameSplit[1]
        //         }
        //     })

        //     //push Guardian ID to student.guardians array
        //     await studentDoc.guardians.push(newGuardian._id);
        //     await studentDoc.save()
        // })))

//--------------------------------------------------------

        // //iterate through students arr
        // guardianReqBody.students.forEach( async student => {
        //     //split full name to firstName and lastName
        //     const nameSplit = student.split(" ");
        //     console.log('nameSplit', nameSplit)

        //     //find student document with matching name
        //     let studentDoc = await Student.find({
        //         $and: {
        //             firstName: nameSplit[0],
        //             lastName: nameSplit[1]
        //         }
        //     })

        //     console.log('studentDoc', studentDoc._id);

        //     // replace name in list of students with student ID in guardian
        //     student = studentDoc._id;    
        // })
        // console.log('guardianReqBody', guardianReqBody);

        //create Guardian
        // const newGuardian = await Guardian.create(guardianReqBody);

        // guardianReqBody.students.forEach( async student => {
        //     //find student document with matching name
        //     let studentDoc = await Student.findOne({
        //         $and: {
        //             firstName: nameSplit[0],
        //             lastName: nameSplit[1]
        //         }
        //     })

        //     //push Guardian ID to student.guardians array
        //     await studentDoc.guardians.push(newGuardian._id);
        //     await studentDoc.save()
        // })